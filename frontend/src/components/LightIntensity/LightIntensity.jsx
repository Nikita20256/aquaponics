import React from 'react';
import './LightIntensity.css';
import Button from '../Button/Button';

const LightIntensity = ({ lightLevel }) => {
  // –¶–≤–µ—Ç–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–∏—Ä–æ–¥–Ω—ã—Ö –æ—Ç—Ç–µ–Ω–∫–æ–≤ —Å–≤–µ—Ç–∞
  const colors = {
    dark: '#4A4A4A',        // –¢–µ–º–Ω—ã–π (–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ —Å–≤–µ—Ç–∞)
    low: '#8CC152',         // –ó–µ–ª–µ–Ω—ã–π (–Ω–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å)
    ideal: '#FFCE54',       // –ñ–µ–ª—Ç—ã–π (–∏–¥–µ–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å)
    high: '#FC6E51',        // –û—Ä–∞–Ω–∂–µ–≤—ã–π (–≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å)
    danger: '#ED5565',      // –ö—Ä–∞—Å–Ω—ã–π (–æ–ø–∞—Å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å)
    textDark: '#2C3E50',
    textLight: '#F5F7FA'
  };

  // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ –æ—Å–≤–µ—â–µ–Ω–Ω–æ—Å—Ç–∏
  const getLightColor = (light) => {
    if (light === null) return colors.textDark;
    if (light < 2000) return colors.dark;      // –°–ª–∏—à–∫–æ–º —Ç–µ–º–Ω–æ
    if (light < 10000) return colors.low;     // –ù–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å
    if (light < 30000) return colors.ideal;   // –ò–¥–µ–∞–ª—å–Ω–æ
    if (light < 50000) return colors.high;    // –í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å
    return colors.danger;                     // –û–ø–∞—Å–Ω–æ
  };

  // –ì—Ä–∞–¥–∏–µ–Ω—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–ª–Ω–µ—á–Ω–æ–≥–æ —Å–≤–µ—Ç–∞
  const getBackground = () => {
    return `linear-gradient(135deg, ${colors.ideal}20 0%, ${colors.high}20 100%)`;
  };

  // –ü–µ—Ä–µ–≤–æ–¥ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç—ã –¥–ª—è —à–∫–∞–ª—ã
  const getPercentage = (light) => {
    if (!light) return 0;
    return Math.min(100, (light / 50000) * 100);
  };

  return (
    <div 
      className="light-card"
      style={{ background: getBackground() }}
    >
      <div className="light-header">
        <h1 className="light-title">
          <span className="icon">‚òÄÔ∏è</span> –û—Å–≤–µ—â–µ–Ω–Ω–∏–µ –∞–∫–≤–∞–ø–æ–Ω–∏–∫–∏ 
        </h1>
        <div className="light-icons">
          <span className="icon">üåë</span>
          <span className="icon">üå§Ô∏è</span>
          <span className="icon">üîÜ</span>
        </div>
      </div>

      <div className="light-display">
        <div className="light-value" style={{ color: getLightColor(lightLevel) }}>
          {lightLevel !== null ? lightLevel.toLocaleString() : '--'}
          <span className="light-unit">lux</span>
        </div>
        <div className="light-scale">
          <span style={{ color: colors.dark }}>0</span>
          <div className="scale-bar">
            <div 
              className="scale-progress" 
              style={{
                width: `${getPercentage(lightLevel)}%`,
                background: getLightColor(lightLevel)
              }}
            />
          </div>
          <span style={{ color: colors.danger }}>50k</span>
        </div>
      </div>

      <div className="light-footer">
        {lightLevel !== null && (
          <p className="status-message">
            {lightLevel < 2000 ? (
              <>üåë –°–ª–∏—à–∫–æ–º —Ç–µ–º–Ω–æ –¥–ª—è —Ä–∞—Å—Ç–µ–Ω–∏–π</>
            ) : lightLevel < 10000 ? (
              <>üå•Ô∏è –ù–∏–∑–∫–∞—è –æ—Å–≤–µ—â–µ–Ω–Ω–æ—Å—Ç—å</>
            ) : lightLevel < 30000 ? (
              <>üåû –ò–¥–µ–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å</>
            ) : lightLevel < 50000 ? (
              <>‚ö†Ô∏è –Ø—Ä–∫–∏–π —Å–≤–µ—Ç</>
            ) : (
              <>üî• –û–ø–∞—Å–Ω–∞—è –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å</>
            )}
          </p>
        )}
        <Button />
      </div>
    </div>
  );
};

export default LightIntensity;