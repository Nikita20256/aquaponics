{"ast":null,"code":"var _jsxFileName = \"C:\\\\test\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport Temperature from './Temperature/temperature';\nimport Humidity from './Humidity/Humidity';\nimport LightIntensity from './LightIntensity/LightIntensity';\nimport SensorChart from './SensorChart/SensorChart';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingSpinner = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"loading-spinner\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spinner\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this);\n_c = LoadingSpinner;\nconst ErrorMessage = ({\n  message,\n  onRetry\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"error-message\",\n  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"retry-button\",\n    onClick: onRetry,\n    children: \"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0438\\u0442\\u044C \\u043F\\u043E\\u043F\\u044B\\u0442\\u043A\\u0443\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 3\n}, this);\n_c2 = ErrorMessage;\nconst API_CONFIG = {\n  baseURL: 'http://localhost:3000',\n  endpoints: {\n    device: '/user/device',\n    currentTemp: '/temperature',\n    currentHumid: '/humidity',\n    currentLight: '/lightlevel',\n    historicalTemp: '/data/temperature',\n    historicalHumid: '/data/humidity',\n    historicalLight: '/data/light'\n  }\n};\nconst AQUAPONICS_FACTS = [\"Рыбки в аквапонике производят питательные вещества для растений!\", \"Растения очищают воду для рыбок - идеальный симбиоз!\", \"Аквапоника использует на 90% меньше воды, чем традиционное земледелие!\", \"Тилапия и карпы кои - самые популярные рыбы для аквапоники!\", \"Зелень в аквапонике растет в 2 раза быстрее, чем в почве!\", \"Базилик, салат и клубника - лучшие растения для аквапоники!\", \"Идеальная температура воды: 22-26°C для рыб и растений!\", \"Аквапоника имитирует естественные водные экосистемы!\", \"Вода в системе циркулирует постоянно, создавая идеальные условия!\", \"Нет необходимости в химических удобрениях - все натурально!\"];\nfunction Dashboard() {\n  _s();\n  const [sensorData, setSensorData] = useState({\n    temperature: null,\n    humidity: null,\n    light: null\n  });\n  const [deviceId, setDeviceId] = useState(null);\n  const [historicalData, setHistoricalData] = useState(null);\n  const [timeRange, setTimeRange] = useState({\n    startDate: new Date(Date.now() - 24 * 60 * 60 * 1000),\n    endDate: new Date()\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentFact, setCurrentFact] = useState('');\n  const [fishImage, setFishImage] = useState('🐟');\n  const [plantImage, setPlantImage] = useState('🌱');\n  const fetchDeviceId = useCallback(async () => {\n    let isMounted = true;\n    const abortController = new AbortController();\n    try {\n      const response = await axios.get(API_CONFIG.endpoints.device, {\n        baseURL: API_CONFIG.baseURL,\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        },\n        signal: abortController.signal\n      });\n      if (isMounted) {\n        setDeviceId(response.data.device_id);\n      }\n    } catch (err) {\n      if (isMounted && !axios.isCancel(err)) {\n        setError('Не удалось получить данные устройства');\n      }\n    }\n    return () => {\n      isMounted = false;\n      abortController.abort();\n    };\n  }, []);\n  const fetchCurrentData = useCallback(async () => {\n    if (!deviceId) return;\n    try {\n      var _tempRes$data$tempera, _tempRes$data, _humRes$data$humidity, _humRes$data, _lightRes$data$light, _lightRes$data;\n      const [tempRes, humRes, lightRes] = await Promise.all([axios.get(API_CONFIG.endpoints.currentTemp, {\n        baseURL: API_CONFIG.baseURL,\n        params: {\n          device_id: deviceId\n        }\n      }), axios.get(API_CONFIG.endpoints.currentHumid, {\n        baseURL: API_CONFIG.baseURL,\n        params: {\n          device_id: deviceId\n        }\n      }), axios.get(API_CONFIG.endpoints.currentLight, {\n        baseURL: API_CONFIG.baseURL,\n        params: {\n          device_id: deviceId\n        }\n      })]);\n      setSensorData({\n        temperature: (_tempRes$data$tempera = (_tempRes$data = tempRes.data) === null || _tempRes$data === void 0 ? void 0 : _tempRes$data.temperature) !== null && _tempRes$data$tempera !== void 0 ? _tempRes$data$tempera : null,\n        humidity: (_humRes$data$humidity = (_humRes$data = humRes.data) === null || _humRes$data === void 0 ? void 0 : _humRes$data.humidity) !== null && _humRes$data$humidity !== void 0 ? _humRes$data$humidity : null,\n        light: (_lightRes$data$light = (_lightRes$data = lightRes.data) === null || _lightRes$data === void 0 ? void 0 : _lightRes$data.light) !== null && _lightRes$data$light !== void 0 ? _lightRes$data$light : null\n      });\n    } catch (err) {\n      console.error('Ошибка получения данных датчиков:', err);\n    }\n  }, [deviceId]);\n  const fetchHistoricalData = useCallback(async (start, end) => {\n    if (!deviceId) return;\n    try {\n      setLoading(true);\n      const [tempData, humData, lightData] = await Promise.all([axios.get(API_CONFIG.endpoints.historicalTemp, {\n        baseURL: API_CONFIG.baseURL,\n        params: {\n          device_id: deviceId,\n          start: start.toISOString(),\n          end: end.toISOString()\n        }\n      }), axios.get(API_CONFIG.endpoints.historicalHumid, {\n        baseURL: API_CONFIG.baseURL,\n        params: {\n          device_id: deviceId,\n          start: start.toISOString(),\n          end: end.toISOString()\n        }\n      }), axios.get(API_CONFIG.endpoints.historicalLight, {\n        baseURL: API_CONFIG.baseURL,\n        params: {\n          device_id: deviceId,\n          start: start.toISOString(),\n          end: end.toISOString()\n        }\n      })]);\n      setHistoricalData({\n        temperature: tempData.data || null,\n        humidity: humData.data || null,\n        light: lightData.data || null\n      });\n    } catch (err) {\n      setError(`Ошибка загрузки исторических данных`);\n    } finally {\n      setLoading(false);\n    }\n  }, [deviceId]);\n  const handleTimeRangeChange = useCallback((newStartDate, newEndDate) => {\n    setTimeRange({\n      startDate: newStartDate,\n      endDate: newEndDate\n    });\n    fetchHistoricalData(newStartDate, newEndDate);\n  }, [fetchHistoricalData]);\n  useEffect(() => {\n    // Установка случайного факта и иконок\n    setCurrentFact(AQUAPONICS_FACTS[Math.floor(Math.random() * AQUAPONICS_FACTS.length)]);\n    setFishImage(['🐟', '🐠', '🦐', '🐡'][Math.floor(Math.random() * 4)]);\n    setPlantImage(['🌱', '🌿', '🍀', '☘️'][Math.floor(Math.random() * 4)]);\n    const factInterval = setInterval(() => {\n      setCurrentFact(AQUAPONICS_FACTS[Math.floor(Math.random() * AQUAPONICS_FACTS.length)]);\n      setFishImage(['🐟', '🐠', '🦐', '🐡'][Math.floor(Math.random() * 4)]);\n      setPlantImage(['🌱', '🌿', '🍀', '☘️'][Math.floor(Math.random() * 4)]);\n    }, 30000);\n    return () => clearInterval(factInterval);\n  }, []);\n  useEffect(() => {\n    fetchDeviceId();\n  }, [fetchDeviceId]);\n  useEffect(() => {\n    fetchCurrentData();\n    const intervalId = setInterval(fetchCurrentData, 10000);\n    return () => clearInterval(intervalId);\n  }, [fetchCurrentData]);\n  useEffect(() => {\n    fetchHistoricalData(timeRange.startDate, timeRange.endDate);\n  }, [fetchHistoricalData, timeRange]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-root\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-container\",\n        children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          message: error,\n          onRetry: () => {\n            setError(null);\n            fetchDeviceId();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this);\n  }\n  if (!deviceId || loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-root\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-container\",\n        children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-root\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"dashboard-title\",\n        children: \"\\u041F\\u0430\\u043D\\u0435\\u043B\\u044C \\u0443\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F \\u0430\\u043A\\u0432\\u0430\\u043F\\u043E\\u043D\\u0438\\u043A\\u043E\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aquaponics-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"device-info-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\u0412\\u0430\\u0448\\u0430 \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0430 #\", deviceId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"status-dot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u0410\\u043A\\u0442\\u0438\\u0432\\u043D\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fact-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icons-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon\",\n              children: fishImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon\",\n              children: plantImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fact-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"\\u0417\\u043D\\u0430\\u0435\\u0442\\u0435 \\u043B\\u0438 \\u0432\\u044B?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: currentFact\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sensors-grid\",\n        children: [/*#__PURE__*/_jsxDEV(Temperature, {\n          temperature: sensorData.temperature\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Humidity, {\n          humidity: sensorData.humidity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LightIntensity, {\n          lightLevel: sensorData.light\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), historicalData && /*#__PURE__*/_jsxDEV(SensorChart, {\n        historicalData: historicalData,\n        startDate: timeRange.startDate,\n        endDate: timeRange.endDate,\n        onTimeRangeChange: handleTimeRangeChange,\n        deviceId: deviceId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"tVnD65qHVMNcKetr9mbAH5otOmU=\");\n_c3 = Dashboard;\nexport default Dashboard;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LoadingSpinner\");\n$RefreshReg$(_c2, \"ErrorMessage\");\n$RefreshReg$(_c3, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","Temperature","Humidity","LightIntensity","SensorChart","jsxDEV","_jsxDEV","LoadingSpinner","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","ErrorMessage","message","onRetry","onClick","_c2","API_CONFIG","baseURL","endpoints","device","currentTemp","currentHumid","currentLight","historicalTemp","historicalHumid","historicalLight","AQUAPONICS_FACTS","Dashboard","_s","sensorData","setSensorData","temperature","humidity","light","deviceId","setDeviceId","historicalData","setHistoricalData","timeRange","setTimeRange","startDate","Date","now","endDate","loading","setLoading","error","setError","currentFact","setCurrentFact","fishImage","setFishImage","plantImage","setPlantImage","fetchDeviceId","isMounted","abortController","AbortController","response","get","headers","Authorization","localStorage","getItem","signal","data","device_id","err","isCancel","abort","fetchCurrentData","_tempRes$data$tempera","_tempRes$data","_humRes$data$humidity","_humRes$data","_lightRes$data$light","_lightRes$data","tempRes","humRes","lightRes","Promise","all","params","console","fetchHistoricalData","start","end","tempData","humData","lightData","toISOString","handleTimeRangeChange","newStartDate","newEndDate","Math","floor","random","length","factInterval","setInterval","clearInterval","intervalId","lightLevel","onTimeRangeChange","_c3","$RefreshReg$"],"sources":["C:/test/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport Temperature from './Temperature/temperature';\r\nimport Humidity from './Humidity/Humidity';\r\nimport LightIntensity from './LightIntensity/LightIntensity';\r\nimport SensorChart from './SensorChart/SensorChart';\r\nimport './Dashboard.css';\r\n\r\nconst LoadingSpinner = () => (\r\n  <div className=\"loading-spinner\">\r\n    <div className=\"spinner\"></div>\r\n    <p>Загрузка...</p>\r\n  </div>\r\n);\r\n\r\nconst ErrorMessage = ({ message, onRetry }) => (\r\n  <div className=\"error-message\">\r\n    <p>{message}</p>\r\n    <button className=\"retry-button\" onClick={onRetry}>\r\n      Повторить попытку\r\n    </button>\r\n  </div>\r\n);\r\n\r\nconst API_CONFIG = {\r\n  baseURL: 'http://localhost:3000',\r\n  endpoints: {\r\n    device: '/user/device',\r\n    currentTemp: '/temperature',\r\n    currentHumid: '/humidity',\r\n    currentLight: '/lightlevel',\r\n    historicalTemp: '/data/temperature',\r\n    historicalHumid: '/data/humidity',\r\n    historicalLight: '/data/light'\r\n  }\r\n};\r\n\r\nconst AQUAPONICS_FACTS = [\r\n  \"Рыбки в аквапонике производят питательные вещества для растений!\",\r\n  \"Растения очищают воду для рыбок - идеальный симбиоз!\",\r\n  \"Аквапоника использует на 90% меньше воды, чем традиционное земледелие!\",\r\n  \"Тилапия и карпы кои - самые популярные рыбы для аквапоники!\",\r\n  \"Зелень в аквапонике растет в 2 раза быстрее, чем в почве!\",\r\n  \"Базилик, салат и клубника - лучшие растения для аквапоники!\",\r\n  \"Идеальная температура воды: 22-26°C для рыб и растений!\",\r\n  \"Аквапоника имитирует естественные водные экосистемы!\",\r\n  \"Вода в системе циркулирует постоянно, создавая идеальные условия!\",\r\n  \"Нет необходимости в химических удобрениях - все натурально!\"\r\n];\r\n\r\nfunction Dashboard() {\r\n  const [sensorData, setSensorData] = useState({\r\n    temperature: null,\r\n    humidity: null,\r\n    light: null\r\n  });\r\n  const [deviceId, setDeviceId] = useState(null);\r\n  const [historicalData, setHistoricalData] = useState(null);\r\n  const [timeRange, setTimeRange] = useState({\r\n    startDate: new Date(Date.now() - 24 * 60 * 60 * 1000),\r\n    endDate: new Date()\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [currentFact, setCurrentFact] = useState('');\r\n  const [fishImage, setFishImage] = useState('🐟');\r\n  const [plantImage, setPlantImage] = useState('🌱');\r\n\r\n  const fetchDeviceId = useCallback(async () => {\r\n    let isMounted = true;\r\n    const abortController = new AbortController();\r\n\r\n    try {\r\n      const response = await axios.get(API_CONFIG.endpoints.device, {\r\n        baseURL: API_CONFIG.baseURL,\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n        signal: abortController.signal\r\n      });\r\n\r\n      if (isMounted) {\r\n        setDeviceId(response.data.device_id);\r\n      }\r\n    } catch (err) {\r\n      if (isMounted && !axios.isCancel(err)) {\r\n        setError('Не удалось получить данные устройства');\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      isMounted = false;\r\n      abortController.abort();\r\n    };\r\n  }, []);\r\n\r\n  const fetchCurrentData = useCallback(async () => {\r\n    if (!deviceId) return;\r\n\r\n    try {\r\n      const [tempRes, humRes, lightRes] = await Promise.all([\r\n        axios.get(API_CONFIG.endpoints.currentTemp, {\r\n          baseURL: API_CONFIG.baseURL,\r\n          params: { device_id: deviceId }\r\n        }),\r\n        axios.get(API_CONFIG.endpoints.currentHumid, {\r\n          baseURL: API_CONFIG.baseURL,\r\n          params: { device_id: deviceId }\r\n        }),\r\n        axios.get(API_CONFIG.endpoints.currentLight, {\r\n          baseURL: API_CONFIG.baseURL,\r\n          params: { device_id: deviceId }\r\n        })\r\n      ]);\r\n      \r\n      setSensorData({\r\n        temperature: tempRes.data?.temperature ?? null,\r\n        humidity: humRes.data?.humidity ?? null,\r\n        light: lightRes.data?.light ?? null\r\n      });\r\n    } catch (err) {\r\n      console.error('Ошибка получения данных датчиков:', err);\r\n    }\r\n  }, [deviceId]);\r\n\r\n  const fetchHistoricalData = useCallback(async (start, end) => {\r\n    if (!deviceId) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      const [tempData, humData, lightData] = await Promise.all([\r\n        axios.get(API_CONFIG.endpoints.historicalTemp, {\r\n          baseURL: API_CONFIG.baseURL,\r\n          params: {\r\n            device_id: deviceId,\r\n            start: start.toISOString(),\r\n            end: end.toISOString()\r\n          }\r\n        }),\r\n        axios.get(API_CONFIG.endpoints.historicalHumid, {\r\n          baseURL: API_CONFIG.baseURL,\r\n          params: {\r\n            device_id: deviceId,\r\n            start: start.toISOString(),\r\n            end: end.toISOString()\r\n          }\r\n        }),\r\n        axios.get(API_CONFIG.endpoints.historicalLight, {\r\n          baseURL: API_CONFIG.baseURL,\r\n          params: {\r\n            device_id: deviceId,\r\n            start: start.toISOString(),\r\n            end: end.toISOString()\r\n          }\r\n        })\r\n      ]);\r\n      \r\n      setHistoricalData({\r\n        temperature: tempData.data || null,\r\n        humidity: humData.data || null,\r\n        light: lightData.data || null\r\n      });\r\n    } catch (err) {\r\n      setError(`Ошибка загрузки исторических данных`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [deviceId]);\r\n\r\n  const handleTimeRangeChange = useCallback((newStartDate, newEndDate) => {\r\n    setTimeRange({\r\n      startDate: newStartDate,\r\n      endDate: newEndDate\r\n    });\r\n    fetchHistoricalData(newStartDate, newEndDate);\r\n  }, [fetchHistoricalData]);\r\n\r\n  useEffect(() => {\r\n    // Установка случайного факта и иконок\r\n    setCurrentFact(AQUAPONICS_FACTS[Math.floor(Math.random() * AQUAPONICS_FACTS.length)]);\r\n    setFishImage(['🐟', '🐠', '🦐', '🐡'][Math.floor(Math.random() * 4)]);\r\n    setPlantImage(['🌱', '🌿', '🍀', '☘️'][Math.floor(Math.random() * 4)]);\r\n\r\n    const factInterval = setInterval(() => {\r\n      setCurrentFact(AQUAPONICS_FACTS[Math.floor(Math.random() * AQUAPONICS_FACTS.length)]);\r\n      setFishImage(['🐟', '🐠', '🦐', '🐡'][Math.floor(Math.random() * 4)]);\r\n      setPlantImage(['🌱', '🌿', '🍀', '☘️'][Math.floor(Math.random() * 4)]);\r\n    }, 30000);\r\n\r\n    return () => clearInterval(factInterval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchDeviceId();\r\n  }, [fetchDeviceId]);\r\n\r\n  useEffect(() => {\r\n    fetchCurrentData();\r\n    const intervalId = setInterval(fetchCurrentData, 10000);\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchCurrentData]);\r\n\r\n  useEffect(() => {\r\n    fetchHistoricalData(timeRange.startDate, timeRange.endDate);\r\n  }, [fetchHistoricalData, timeRange]);\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"dashboard-root\">\r\n        <div className=\"dashboard-container\">\r\n          <ErrorMessage \r\n            message={error} \r\n            onRetry={() => {\r\n              setError(null);\r\n              fetchDeviceId();\r\n            }} \r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!deviceId || loading) {\r\n    return (\r\n      <div className=\"dashboard-root\">\r\n        <div className=\"dashboard-container\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard-root\">\r\n      <div className=\"dashboard-container\">\r\n        <h1 className=\"dashboard-title\">Панель управления аквапоникой</h1>\r\n        \r\n        {/* Информационная плашка */}\r\n        <div className=\"aquaponics-card\">\r\n          <div className=\"device-info-section\">\r\n            <h3>Ваша система #{deviceId}</h3>\r\n            <div className=\"status-indicator\">\r\n              <span className=\"status-dot\"></span>\r\n              <span>Активна</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"fact-section\">\r\n            <div className=\"icons-row\">\r\n              <span className=\"icon\">{fishImage}</span>\r\n              <span className=\"icon\">{plantImage}</span>\r\n            </div>\r\n            <div className=\"fact-text\">\r\n              <h4>Знаете ли вы?</h4>\r\n              <p>{currentFact}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"sensors-grid\">\r\n          <Temperature temperature={sensorData.temperature}/>\r\n          <Humidity humidity={sensorData.humidity}/>\r\n          <LightIntensity lightLevel={sensorData.light}/>\r\n        </div>\r\n        \r\n        {historicalData && (\r\n          <SensorChart \r\n            historicalData={historicalData}\r\n            startDate={timeRange.startDate}\r\n            endDate={timeRange.endDate}\r\n            onTimeRangeChange={handleTimeRangeChange}\r\n            deviceId={deviceId}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}