{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ilya\\\\Desktop\\\\labi\\\\2 \\u043A\\u0443\\u0440\\u0441\\\\\\u0413\\u041F\\u041E\\\\frontik\\\\aquaponics-frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Регистрация необходимых компонентов для графика\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nfunction Dashboard() {\n  _s();\n  const [data, setData] = useState({\n    temperature: 0,\n    humidity: 0,\n    light: 0\n  });\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: [{\n      label: 'Температура',\n      data: [],\n      borderColor: 'rgb(75, 192, 192)',\n      fill: false\n    }, {\n      label: 'Влажность',\n      data: [],\n      borderColor: 'rgb(153, 102, 255)',\n      fill: false\n    }, {\n      label: 'Освещенность',\n      data: [],\n      borderColor: 'rgb(255, 159, 64)',\n      fill: false\n    }]\n  });\n\n  // Функция для получения текущих данных\n  const fetchCurrentData = async () => {\n    try {\n      const [tempRes, humRes, lightRes] = await Promise.all([axios.get('http://localhost:300/temperature?device_id=dev1'), axios.get('http://localhost:3000/humidity?device_id=dev1'), axios.get('http://localhost:3000/lightlevel?device_id=dev1')]);\n      setData({\n        temperature: tempRes.data[0].value,\n        humidity: humRes.data[0].value,\n        light: lightRes.data[0].value\n      });\n    } catch (err) {\n      console.error('Error fetching current data:', err);\n    }\n  };\n\n  // Функция для получения исторических данных для графика\n  const fetchHistoricalData = async () => {\n    try {\n      const [tempRes, humRes, lightRes] = await Promise.all([axios.get('http://localhost:3000/data/temperature?device_id=dev1'), axios.get('http://localhost:3000/data/humidity?device_id=dev1'), axios.get('http://localhost:3000/data/light?device_id=dev1')]);\n\n      // Преобразуем данные в формат для графика\n      setChartData({\n        labels: tempRes.data.map(row => row.timestamp),\n        // Время для X-оси\n        datasets: [{\n          label: 'Температура',\n          data: tempRes.data.map(row => row.value),\n          borderColor: 'rgb(75, 192, 192)',\n          fill: false\n        }, {\n          label: 'Влажность',\n          data: humRes.data.map(row => row.value),\n          borderColor: 'rgb(153, 102, 255)',\n          fill: false\n        }, {\n          label: 'Освещенность',\n          data: lightRes.data.map(row => row.value),\n          borderColor: 'rgb(255, 159, 64)',\n          fill: false\n        }]\n      });\n    } catch (err) {\n      console.error('Error fetching historical data:', err);\n    }\n  };\n  useEffect(() => {\n    fetchCurrentData(); // Получаем текущие данные сразу\n    fetchHistoricalData(); // Получаем исторические данные сразу\n    const interval = setInterval(() => {\n      fetchCurrentData(); // Обновляем текущие данные каждые 10 секунд\n    }, 10000);\n    return () => clearInterval(interval); // Очистка интервала при размонтировании\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl text-black text-center mb-6\",\n      children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u0435\\u043B\\u0438 \\u0432\\u0430\\u0448\\u0435\\u0433\\u043E \\u0443\\u0441\\u0442\\u0440\\u043E\\u0439\\u0441\\u0442\\u0432\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3 gap-6 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dark-green p-4 rounded-lg text-white text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xl font-bold\",\n          children: \"\\u0422\\u0435\\u043C\\u043F\\u0435\\u0440\\u0430\\u0442\\u0443\\u0440\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-2xl\",\n          children: [data.temperature, \" \\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dark-green p-4 rounded-lg text-white text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xl font-bold\",\n          children: \"\\u0421\\u0432\\u0435\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-2xl\",\n          children: [data.light, \" lux\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dark-green p-4 rounded-lg text-white text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xl font-bold\",\n          children: \"\\u0412\\u043B\\u0430\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-2xl\",\n          children: [data.humidity, \" %\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl text-center mb-4\",\n        children: \"\\u0418\\u0441\\u0442\\u043E\\u0440\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"yxqtxEeKiktZh/TO8lSs315a8jQ=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useState","useEffect","axios","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Dashboard","_s","data","setData","temperature","humidity","light","chartData","setChartData","labels","datasets","label","borderColor","fill","fetchCurrentData","tempRes","humRes","lightRes","Promise","all","get","value","err","console","error","fetchHistoricalData","map","row","timestamp","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ilya/Desktop/labi/2 курс/ГПО/frontik/aquaponics-frontend/src/components/Dashboard.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\n// Регистрация необходимых компонентов для графика\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nfunction Dashboard() {\r\n  const [data, setData] = useState({ temperature: 0, humidity: 0, light: 0 });\r\n  const [chartData, setChartData] = useState({\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        label: 'Температура',\r\n        data: [],\r\n        borderColor: 'rgb(75, 192, 192)',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'Влажность',\r\n        data: [],\r\n        borderColor: 'rgb(153, 102, 255)',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'Освещенность',\r\n        data: [],\r\n        borderColor: 'rgb(255, 159, 64)',\r\n        fill: false,\r\n      },\r\n    ],\r\n  });\r\n\r\n  // Функция для получения текущих данных\r\n  const fetchCurrentData = async () => {\r\n    try {\r\n      const [tempRes, humRes, lightRes] = await Promise.all([\r\n        axios.get('http://localhost:300/temperature?device_id=dev1'),\r\n        axios.get('http://localhost:3000/humidity?device_id=dev1'),\r\n        axios.get('http://localhost:3000/lightlevel?device_id=dev1'),\r\n      ]);\r\n      setData({\r\n        temperature: tempRes.data[0].value,\r\n        humidity: humRes.data[0].value,\r\n        light: lightRes.data[0].value,\r\n      });\r\n    } catch (err) {\r\n      console.error('Error fetching current data:', err);\r\n    }\r\n  };\r\n\r\n  // Функция для получения исторических данных для графика\r\n  const fetchHistoricalData = async () => {\r\n    try {\r\n      const [tempRes, humRes, lightRes] = await Promise.all([\r\n        axios.get('http://localhost:3000/data/temperature?device_id=dev1'),\r\n        axios.get('http://localhost:3000/data/humidity?device_id=dev1'),\r\n        axios.get('http://localhost:3000/data/light?device_id=dev1'),\r\n      ]);\r\n\r\n      // Преобразуем данные в формат для графика\r\n      setChartData({\r\n        labels: tempRes.data.map((row) => row.timestamp), // Время для X-оси\r\n        datasets: [\r\n          {\r\n            label: 'Температура',\r\n            data: tempRes.data.map((row) => row.value),\r\n            borderColor: 'rgb(75, 192, 192)',\r\n            fill: false,\r\n          },\r\n          {\r\n            label: 'Влажность',\r\n            data: humRes.data.map((row) => row.value),\r\n            borderColor: 'rgb(153, 102, 255)',\r\n            fill: false,\r\n          },\r\n          {\r\n            label: 'Освещенность',\r\n            data: lightRes.data.map((row) => row.value),\r\n            borderColor: 'rgb(255, 159, 64)',\r\n            fill: false,\r\n          },\r\n        ],\r\n      });\r\n    } catch (err) {\r\n      console.error('Error fetching historical data:', err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCurrentData(); // Получаем текущие данные сразу\r\n    fetchHistoricalData(); // Получаем исторические данные сразу\r\n    const interval = setInterval(() => {\r\n      fetchCurrentData(); // Обновляем текущие данные каждые 10 секунд\r\n    }, 10000);\r\n    return () => clearInterval(interval); // Очистка интервала при размонтировании\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h1 className=\"text-4xl text-black text-center mb-6\">Показатели вашего устройства</h1>\r\n      {/* Блок с текущими значениями */}\r\n      <div className=\"grid grid-cols-3 gap-6 mb-6\">\r\n        <div className=\"dark-green p-4 rounded-lg text-white text-center\">\r\n          <p className=\"text-xl font-bold\">Температура</p>\r\n          <p className=\"text-2xl\">{data.temperature} °C</p>\r\n        </div>\r\n        <div className=\"dark-green p-4 rounded-lg text-white text-center\">\r\n          <p className=\"text-xl font-bold\">Свет</p>\r\n          <p className=\"text-2xl\">{data.light} lux</p>\r\n        </div>\r\n        <div className=\"dark-green p-4 rounded-lg text-white text-center\">\r\n          <p className=\"text-xl font-bold\">Влажность</p>\r\n          <p className=\"text-2xl\">{data.humidity} %</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* График */}\r\n      <div className=\"mb-6\">\r\n        <h2 className=\"text-2xl text-center mb-4\">Исторические данные</h2>\r\n        <Line data={chartData} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}