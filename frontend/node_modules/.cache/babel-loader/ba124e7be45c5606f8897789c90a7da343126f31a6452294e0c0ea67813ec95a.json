{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ilya\\\\Desktop\\\\labi\\\\2 \\u043A\\u0443\\u0440\\u0441\\\\\\u0413\\u041F\\u041E\\\\frontik\\\\aquaponics-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { BrowserRouter as Router, Routes, Route, Navigate, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Navbar from './components/Navbar';\nimport Login from './components/Login';\nimport Dashboard from './components/Dashboard';\nimport Plants from './components/Plants';\nimport HomePage from './components/HomePage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [token, setToken] = useState(() => {\n    // Проверяем токен в localStorage при инициализации\n    const storedToken = localStorage.getItem('token');\n    return storedToken || null;\n  });\n\n  // Проверяем валидность токена при загрузке\n  useEffect(() => {\n    const verifyToken = async () => {\n      if (token) {\n        try {\n          await axios.get('/api/verify-token', {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n        } catch (error) {\n          console.error('Invalid token:', error);\n          setToken(null);\n        }\n      }\n    };\n    verifyToken();\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      token: token,\n      setToken: setToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          setToken: setToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          token: token,\n          children: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/plants\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          token: token,\n          children: /*#__PURE__*/_jsxDEV(Plants, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0Dif2oyD8EFRXOaMy4IIag4U1x4=\");\n_c = App;\nfunction ProtectedRoute({\n  token,\n  children\n}) {\n  _s2();\n  const location = useLocation();\n  if (!token) {\n    // Сохраняем текущий путь для редиректа после входа\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n}\n_s2(ProtectedRoute, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c2 = ProtectedRoute;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ProtectedRoute\");","map":{"version":3,"names":["BrowserRouter","Router","Routes","Route","Navigate","useLocation","useState","useEffect","axios","Navbar","Login","Dashboard","Plants","HomePage","jsxDEV","_jsxDEV","App","_s","token","setToken","storedToken","localStorage","getItem","verifyToken","get","headers","Authorization","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","ProtectedRoute","_c","_s2","location","to","state","from","replace","_c2","$RefreshReg$"],"sources":["C:/Users/Ilya/Desktop/labi/2 курс/ГПО/frontik/aquaponics-frontend/src/App.js"],"sourcesContent":["import { BrowserRouter as Router, Routes, Route, Navigate, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Navbar from './components/Navbar';\nimport Login from './components/Login';\nimport Dashboard from './components/Dashboard';\nimport Plants from './components/Plants';\nimport HomePage from './components/HomePage';\n\nfunction App() {\n  const [token, setToken] = useState(() => {\n    // Проверяем токен в localStorage при инициализации\n    const storedToken = localStorage.getItem('token');\n    return storedToken || null;\n  });\n\n  // Проверяем валидность токена при загрузке\n  useEffect(() => {\n    const verifyToken = async () => {\n      if (token) {\n        try {\n          await axios.get('/api/verify-token', {\n            headers: { Authorization: `Bearer ${token}` }\n          });\n        } catch (error) {\n          console.error('Invalid token:', error);\n          setToken(null);\n        }\n      }\n    };\n    verifyToken();\n  }, [token]);\n\n  return (\n    <Router>\n      <Navbar token={token} setToken={setToken} />\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/login\" element={<Login setToken={setToken} />} />\n        \n        {/* Защищенные маршруты */}\n        <Route\n          path=\"/dashboard\"\n          element={\n            <ProtectedRoute token={token}>\n              <Dashboard />\n            </ProtectedRoute>\n          }\n        />\n        <Route\n          path=\"/plants\"\n          element={\n            <ProtectedRoute token={token}>\n              <Plants />\n            </ProtectedRoute>\n          }\n        />\n      </Routes>\n    </Router>\n  );\n}\n\nfunction ProtectedRoute({ token, children }) {\n  const location = useLocation();\n  \n  if (!token) {\n    // Сохраняем текущий путь для редиректа после входа\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n\n  return children;\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}