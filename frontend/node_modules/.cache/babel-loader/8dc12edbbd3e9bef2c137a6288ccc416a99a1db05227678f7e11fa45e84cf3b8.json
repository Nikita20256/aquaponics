{"ast":null,"code":"var _jsxFileName = \"C:\\\\aquaponics\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Temperature from './components/Temperature/temperature';\nimport Humidity from './components/Humidity/Humidity';\nimport LightIntensity from './components/LightIntensity/LightIntensity';\nimport SensorChart from './components/SensorChart/SensorChart';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [temperature, setTemperature] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n  const [lightLevel, setLightLevel] = useState(0);\n  const [history, setHistory] = useState([]);\n  const [timestamps, setTimestamps] = useState([]);\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [historicalData, setHistoricalData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const fetchAllData = async () => {\n    try {\n      const now = new Date();\n      const timeString = `${now.getHours()}:${now.getMinutes()}:${now.getSeconds()}`;\n      const [tempResponse, humidResponse, lightResponse] = await Promise.all([axios.get('http://172.16.22.225:3000/temperature'), axios.get('http://172.16.22.225:3000/humidity'), axios.get('http://172.16.22.225:3000/lightlevel')]);\n      setTemperature(tempResponse.data.temperature);\n      setHumidity(humidResponse.data.humidity);\n      setLightLevel(lightResponse.data.light);\n      setHistory(prev => {\n        const newData = {\n          time: timeString,\n          temperature: tempResponse.data.temperature,\n          humidity: humidResponse.data.humidity,\n          light: lightResponse.data.light\n        };\n        return [...prev.slice(-9), newData];\n      });\n      setTimestamps(prev => [...prev.slice(-9), timeString]);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const fetchHistoricalData = async () => {\n    if (!startDate || !endDate) return;\n    setIsLoading(true);\n    try {\n      const response = await axios.get('http://172.16.22.225:3000/data/all', {\n        params: {\n          start: startDate.toISOString(),\n          end: endDate.toISOString()\n        }\n      });\n      setHistoricalData(response.data);\n    } catch (error) {\n      console.error('Error fetching historical data:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchAllData();\n    const interval = setInterval(fetchAllData, 3000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sensors-container\",\n      children: [/*#__PURE__*/_jsxDEV(Temperature, {\n        temperature: temperature\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Humidity, {\n        humidity: humidity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LightIntensity, {\n        lightLevel: lightLevel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SensorChart, {\n      timestamps: timestamps,\n      Ф: true,\n      history: history,\n      historicalData: historicalData,\n      startDate: startDate,\n      endDate: endDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"E1n8V/1ZSfh8pk8JYTXAkFR2VoM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Temperature","Humidity","LightIntensity","SensorChart","DatePicker","jsxDEV","_jsxDEV","App","_s","temperature","setTemperature","humidity","setHumidity","lightLevel","setLightLevel","history","setHistory","timestamps","setTimestamps","startDate","setStartDate","endDate","setEndDate","historicalData","setHistoricalData","isLoading","setIsLoading","fetchAllData","now","Date","timeString","getHours","getMinutes","getSeconds","tempResponse","humidResponse","lightResponse","Promise","all","get","data","light","prev","newData","time","slice","error","console","fetchHistoricalData","response","params","start","toISOString","end","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Ф","_c","$RefreshReg$"],"sources":["C:/aquaponics/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport Temperature from './components/Temperature/temperature';\r\nimport Humidity from './components/Humidity/Humidity';\r\nimport LightIntensity from './components/LightIntensity/LightIntensity';\r\nimport SensorChart from './components/SensorChart/SensorChart';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nfunction App() {\r\n  const [temperature, setTemperature] = useState(0);\r\n  const [humidity, setHumidity] = useState(0);\r\n  const [lightLevel, setLightLevel] = useState(0);\r\n  const [history, setHistory] = useState([]);\r\n  const [timestamps, setTimestamps] = useState([]);\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [historicalData, setHistoricalData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const fetchAllData = async () => {\r\n    try {\r\n      const now = new Date();\r\n      const timeString = `${now.getHours()}:${now.getMinutes()}:${now.getSeconds()}`;\r\n      \r\n      const [tempResponse, humidResponse, lightResponse] = await Promise.all([\r\n        axios.get('http://172.16.22.225:3000/temperature'),\r\n        axios.get('http://172.16.22.225:3000/humidity'),\r\n        axios.get('http://172.16.22.225:3000/lightlevel')\r\n      ]);\r\n      \r\n      setTemperature(tempResponse.data.temperature)\r\n      setHumidity(humidResponse.data.humidity)\r\n      setLightLevel(lightResponse.data.light)\r\n      \r\n      setHistory(prev => {\r\n        const newData = {\r\n          time: timeString,\r\n          temperature: tempResponse.data.temperature,\r\n          humidity: humidResponse.data.humidity,\r\n          light: lightResponse.data.light\r\n        };\r\n        return [...prev.slice(-9), newData];\r\n      })\r\n      \r\n      setTimestamps(prev => [...prev.slice(-9), timeString]);\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  }\r\n\r\n  const fetchHistoricalData = async () => {\r\n    if (!startDate || !endDate) return;\r\n    \r\n    setIsLoading(true);\r\n    try {\r\n      const response = await axios.get('http://172.16.22.225:3000/data/all', {\r\n        params: {\r\n          start: startDate.toISOString(),\r\n          end: endDate.toISOString()\r\n        }\r\n      });\r\n      setHistoricalData(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching historical data:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAllData();\r\n    const interval = setInterval(fetchAllData, 3000);\r\n    return () => clearInterval(interval);\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"sensors-container\">\r\n        <Temperature temperature={temperature}/>\r\n        <Humidity humidity={humidity}/>\r\n        <LightIntensity lightLevel={lightLevel}/>\r\n      </div>\r\n  \r\n      <SensorChart \r\n        timestamps={timestamps} Ф\r\n        history={history} \r\n        historicalData={historicalData}\r\n        startDate={startDate}\r\n        endDate={endDate}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}