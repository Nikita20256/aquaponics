{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u0440\\u0430\\u0431\\u043E\\u0447\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430\\\\\\u0440\\u0430\\u0431\\u043E\\u0442\\u044B 2 \\u043A\\u0443\\u0440\\u0441\\u0430\\\\\\u0413\\u041F\\u041E\\\\final mb\\\\frontend\\\\src\\\\components\\\\SensorChart\\\\SensorChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport './SensorChart.css';\nimport DatePicker from '../DatePicker/DatePicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst SensorChart = ({\n  historicalData,\n  startDate,\n  endDate,\n  onTimeRangeChange,\n  loading\n}) => {\n  _s();\n  var _historicalData$humid, _historicalData$humid2, _historicalData$light, _historicalData$tempe;\n  const [localTimeRange, setLocalTimeRange] = useState({\n    startDate,\n    endDate\n  });\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const handleDateChange = (type, date) => {\n    const newTimeRange = {\n      ...localTimeRange,\n      [type]: date\n    };\n    setLocalTimeRange(newTimeRange);\n    if (newTimeRange.startDate && newTimeRange.endDate) {\n      onTimeRangeChange(newTimeRange.startDate, newTimeRange.endDate);\n    }\n  };\n  const chartData = {\n    labels: (historicalData === null || historicalData === void 0 ? void 0 : (_historicalData$humid = historicalData.humidity) === null || _historicalData$humid === void 0 ? void 0 : _historicalData$humid.map(item => formatDate(item.timestamp))) || [],\n    datasets: [{\n      label: 'Humidity (%)',\n      data: (historicalData === null || historicalData === void 0 ? void 0 : (_historicalData$humid2 = historicalData.humidity) === null || _historicalData$humid2 === void 0 ? void 0 : _historicalData$humid2.map(item => item.value)) || [],\n      borderColor: 'rgb(54, 162, 235)',\n      backgroundColor: 'rgba(54, 162, 235, 0.5)',\n      tension: 0.1,\n      borderWidth: 2,\n      pointRadius: 3\n    }, {\n      label: 'Light Level',\n      data: (historicalData === null || historicalData === void 0 ? void 0 : (_historicalData$light = historicalData.light) === null || _historicalData$light === void 0 ? void 0 : _historicalData$light.map(item => item.value)) || [],\n      borderColor: 'rgb(255, 206, 86)',\n      backgroundColor: 'rgba(255, 206, 86, 0.5)',\n      tension: 0.1,\n      borderWidth: 2,\n      pointRadius: 3\n    }, {\n      label: 'Temperature (°C)',\n      data: (historicalData === null || historicalData === void 0 ? void 0 : (_historicalData$tempe = historicalData.temperature) === null || _historicalData$tempe === void 0 ? void 0 : _historicalData$tempe.map(item => item.value)) || [],\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgba(255, 99, 132, 0.5)',\n      tension: 0.1,\n      borderWidth: 2,\n      pointRadius: 3\n    }]\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top',\n        labels: {\n          font: {\n            size: 12\n          }\n        }\n      },\n      title: {\n        display: true,\n        text: `График показателей с ${localTimeRange.startDate.toLocaleDateString()} по ${localTimeRange.endDate.toLocaleDateString()}`,\n        font: {\n          size: 16\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: false\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sensor-chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-controls\",\n      children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: localTimeRange.startDate,\n        onChange: date => handleDateChange('startDate', date),\n        selectsStart: true,\n        startDate: localTimeRange.startDate,\n        endDate: localTimeRange.endDate,\n        maxDate: localTimeRange.endDate,\n        placeholderText: \"\\u041D\\u0430\\u0447\\u0430\\u043B\\u044C\\u043D\\u0430\\u044F \\u0434\\u0430\\u0442\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: localTimeRange.endDate,\n        onChange: date => handleDateChange('endDate', date),\n        selectsEnd: true,\n        startDate: localTimeRange.startDate,\n        endDate: localTimeRange.endDate,\n        minDate: localTimeRange.startDate,\n        maxDate: new Date(),\n        placeholderText: \"\\u041A\\u043E\\u043D\\u0435\\u0447\\u043D\\u0430\\u044F \\u0434\\u0430\\u0442\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sensor-chart\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-message\",\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Line, {\n        options: options,\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(SensorChart, \"QRuwujCw85LR4wLSocMme6aN8x4=\");\n_c = SensorChart;\nexport default SensorChart;\nvar _c;\n$RefreshReg$(_c, \"SensorChart\");","map":{"version":3,"names":["React","useState","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","DatePicker","jsxDEV","_jsxDEV","register","SensorChart","historicalData","startDate","endDate","onTimeRangeChange","loading","_s","_historicalData$humid","_historicalData$humid2","_historicalData$light","_historicalData$tempe","localTimeRange","setLocalTimeRange","formatDate","dateString","date","Date","toLocaleTimeString","hour","minute","handleDateChange","type","newTimeRange","chartData","labels","humidity","map","item","timestamp","datasets","label","data","value","borderColor","backgroundColor","tension","borderWidth","pointRadius","light","temperature","options","responsive","maintainAspectRatio","plugins","legend","position","font","size","title","display","text","toLocaleDateString","scales","y","beginAtZero","className","children","selected","onChange","selectsStart","maxDate","placeholderText","fileName","_jsxFileName","lineNumber","columnNumber","selectsEnd","minDate","_c","$RefreshReg$"],"sources":["C:/рабочая папка/работы 2 курса/ГПО/final mb/frontend/src/components/SensorChart/SensorChart.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport './SensorChart.css';\r\nimport DatePicker from '../DatePicker/DatePicker';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst SensorChart = ({ historicalData, startDate, endDate, onTimeRangeChange, loading }) => {\r\n  const [localTimeRange, setLocalTimeRange] = useState({\r\n    startDate,\r\n    endDate\r\n  });\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  };\r\n\r\n  const handleDateChange = (type, date) => {\r\n    const newTimeRange = {\r\n      ...localTimeRange,\r\n      [type]: date\r\n    };\r\n    setLocalTimeRange(newTimeRange);\r\n    \r\n    if (newTimeRange.startDate && newTimeRange.endDate) {\r\n      onTimeRangeChange(newTimeRange.startDate, newTimeRange.endDate);\r\n    }\r\n  };\r\n\r\n  const chartData = {\r\n    labels: historicalData?.humidity?.map(item => formatDate(item.timestamp)) || [],\r\n    datasets: [\r\n      {\r\n        label: 'Humidity (%)',\r\n        data: historicalData?.humidity?.map(item => item.value) || [],\r\n        borderColor: 'rgb(54, 162, 235)',\r\n        backgroundColor: 'rgba(54, 162, 235, 0.5)',\r\n        tension: 0.1,\r\n        borderWidth: 2,\r\n        pointRadius: 3\r\n      },\r\n      {\r\n        label: 'Light Level',\r\n        data: historicalData?.light?.map(item => item.value) || [],\r\n        borderColor: 'rgb(255, 206, 86)',\r\n        backgroundColor: 'rgba(255, 206, 86, 0.5)',\r\n        tension: 0.1,\r\n        borderWidth: 2,\r\n        pointRadius: 3\r\n      },\r\n      {\r\n        label: 'Temperature (°C)',\r\n        data: historicalData?.temperature?.map(item => item.value) || [],\r\n        borderColor: 'rgb(255, 99, 132)',\r\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n        tension: 0.1,\r\n        borderWidth: 2,\r\n        pointRadius: 3\r\n      }\r\n    ]\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n        labels: {\r\n          font: {\r\n            size: 12\r\n          }\r\n        }\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: `График показателей с ${localTimeRange.startDate.toLocaleDateString()} по ${localTimeRange.endDate.toLocaleDateString()}`,\r\n        font: {\r\n          size: 16\r\n        }\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: false\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sensor-chart-container\">\r\n      <div className=\"chart-controls\">\r\n        <DatePicker\r\n          selected={localTimeRange.startDate}\r\n          onChange={(date) => handleDateChange('startDate', date)}\r\n          selectsStart\r\n          startDate={localTimeRange.startDate}\r\n          endDate={localTimeRange.endDate}\r\n          maxDate={localTimeRange.endDate}\r\n          placeholderText=\"Начальная дата\"\r\n        />\r\n        <DatePicker\r\n          selected={localTimeRange.endDate}\r\n          onChange={(date) => handleDateChange('endDate', date)}\r\n          selectsEnd\r\n          startDate={localTimeRange.startDate}\r\n          endDate={localTimeRange.endDate}\r\n          minDate={localTimeRange.startDate}\r\n          maxDate={new Date()}\r\n          placeholderText=\"Конечная дата\"\r\n        />\r\n      </div>\r\n      \r\n      <div className=\"sensor-chart\">\r\n        {loading ? (\r\n          <div className=\"loading-message\">Загрузка данных...</div>\r\n        ) : (\r\n          <Line options={options} data={chartData} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SensorChart;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,OAAO,mBAAmB;AAC1B,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElDV,OAAO,CAACW,QAAQ,CACdV,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,MAAMK,WAAW,GAAGA,CAAC;EAAEC,cAAc;EAAEC,SAAS;EAAEC,OAAO;EAAEC,iBAAiB;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,qBAAA,EAAAC,sBAAA,EAAAC,qBAAA,EAAAC,qBAAA;EAC1F,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAG3B,QAAQ,CAAC;IACnDiB,SAAS;IACTC;EACF,CAAC,CAAC;EAEF,MAAMU,UAAU,GAAIC,UAAU,IAAK;IACjC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;IACjC,OAAOC,IAAI,CAACE,kBAAkB,CAAC,EAAE,EAAE;MAAEC,IAAI,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAU,CAAC,CAAC;EAC5E,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAACC,IAAI,EAAEN,IAAI,KAAK;IACvC,MAAMO,YAAY,GAAG;MACnB,GAAGX,cAAc;MACjB,CAACU,IAAI,GAAGN;IACV,CAAC;IACDH,iBAAiB,CAACU,YAAY,CAAC;IAE/B,IAAIA,YAAY,CAACpB,SAAS,IAAIoB,YAAY,CAACnB,OAAO,EAAE;MAClDC,iBAAiB,CAACkB,YAAY,CAACpB,SAAS,EAAEoB,YAAY,CAACnB,OAAO,CAAC;IACjE;EACF,CAAC;EAED,MAAMoB,SAAS,GAAG;IAChBC,MAAM,EAAE,CAAAvB,cAAc,aAAdA,cAAc,wBAAAM,qBAAA,GAAdN,cAAc,CAAEwB,QAAQ,cAAAlB,qBAAA,uBAAxBA,qBAAA,CAA0BmB,GAAG,CAACC,IAAI,IAAId,UAAU,CAACc,IAAI,CAACC,SAAS,CAAC,CAAC,KAAI,EAAE;IAC/EC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,cAAc;MACrBC,IAAI,EAAE,CAAA9B,cAAc,aAAdA,cAAc,wBAAAO,sBAAA,GAAdP,cAAc,CAAEwB,QAAQ,cAAAjB,sBAAA,uBAAxBA,sBAAA,CAA0BkB,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACK,KAAK,CAAC,KAAI,EAAE;MAC7DC,WAAW,EAAE,mBAAmB;MAChCC,eAAe,EAAE,yBAAyB;MAC1CC,OAAO,EAAE,GAAG;MACZC,WAAW,EAAE,CAAC;MACdC,WAAW,EAAE;IACf,CAAC,EACD;MACEP,KAAK,EAAE,aAAa;MACpBC,IAAI,EAAE,CAAA9B,cAAc,aAAdA,cAAc,wBAAAQ,qBAAA,GAAdR,cAAc,CAAEqC,KAAK,cAAA7B,qBAAA,uBAArBA,qBAAA,CAAuBiB,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACK,KAAK,CAAC,KAAI,EAAE;MAC1DC,WAAW,EAAE,mBAAmB;MAChCC,eAAe,EAAE,yBAAyB;MAC1CC,OAAO,EAAE,GAAG;MACZC,WAAW,EAAE,CAAC;MACdC,WAAW,EAAE;IACf,CAAC,EACD;MACEP,KAAK,EAAE,kBAAkB;MACzBC,IAAI,EAAE,CAAA9B,cAAc,aAAdA,cAAc,wBAAAS,qBAAA,GAAdT,cAAc,CAAEsC,WAAW,cAAA7B,qBAAA,uBAA3BA,qBAAA,CAA6BgB,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACK,KAAK,CAAC,KAAI,EAAE;MAChEC,WAAW,EAAE,mBAAmB;MAChCC,eAAe,EAAE,yBAAyB;MAC1CC,OAAO,EAAE,GAAG;MACZC,WAAW,EAAE,CAAC;MACdC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAED,MAAMG,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,mBAAmB,EAAE,KAAK;IAC1BC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE,KAAK;QACfrB,MAAM,EAAE;UACNsB,IAAI,EAAE;YACJC,IAAI,EAAE;UACR;QACF;MACF,CAAC;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE,wBAAwBvC,cAAc,CAACT,SAAS,CAACiD,kBAAkB,CAAC,CAAC,OAAOxC,cAAc,CAACR,OAAO,CAACgD,kBAAkB,CAAC,CAAC,EAAE;QAC/HL,IAAI,EAAE;UACJC,IAAI,EAAE;QACR;MACF;IACF,CAAC;IACDK,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,WAAW,EAAE;MACf;IACF;EACF,CAAC;EAED,oBACExD,OAAA;IAAKyD,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrC1D,OAAA;MAAKyD,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7B1D,OAAA,CAACF,UAAU;QACT6D,QAAQ,EAAE9C,cAAc,CAACT,SAAU;QACnCwD,QAAQ,EAAG3C,IAAI,IAAKK,gBAAgB,CAAC,WAAW,EAAEL,IAAI,CAAE;QACxD4C,YAAY;QACZzD,SAAS,EAAES,cAAc,CAACT,SAAU;QACpCC,OAAO,EAAEQ,cAAc,CAACR,OAAQ;QAChCyD,OAAO,EAAEjD,cAAc,CAACR,OAAQ;QAChC0D,eAAe,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,eACFnE,OAAA,CAACF,UAAU;QACT6D,QAAQ,EAAE9C,cAAc,CAACR,OAAQ;QACjCuD,QAAQ,EAAG3C,IAAI,IAAKK,gBAAgB,CAAC,SAAS,EAAEL,IAAI,CAAE;QACtDmD,UAAU;QACVhE,SAAS,EAAES,cAAc,CAACT,SAAU;QACpCC,OAAO,EAAEQ,cAAc,CAACR,OAAQ;QAChCgE,OAAO,EAAExD,cAAc,CAACT,SAAU;QAClC0D,OAAO,EAAE,IAAI5C,IAAI,CAAC,CAAE;QACpB6C,eAAe,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENnE,OAAA;MAAKyD,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BnD,OAAO,gBACNP,OAAA;QAAKyD,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAAkB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,gBAEzDnE,OAAA,CAACZ,IAAI;QAACsD,OAAO,EAAEA,OAAQ;QAACT,IAAI,EAAER;MAAU;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAC3C;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC3D,EAAA,CApHIN,WAAW;AAAAoE,EAAA,GAAXpE,WAAW;AAsHjB,eAAeA,WAAW;AAAC,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}