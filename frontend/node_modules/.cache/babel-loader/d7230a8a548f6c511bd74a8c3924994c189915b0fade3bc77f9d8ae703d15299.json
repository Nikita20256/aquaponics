{"ast":null,"code":"var _jsxFileName = \"C:\\\\aquaponics\\\\frontend\\\\src\\\\components\\\\SensorChart\\\\SensorChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport './SensorChart.css';\nimport Button from '../Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst SensorChart = ({\n  timestamps,\n  history\n}) => {\n  _s();\n  const [visibleDatasets, setVisibleDatasets] = useState({\n    temperature: true,\n    humidity: true,\n    light: true\n  });\n  const toggleDataset = dataset => {\n    setVisibleDatasets(prev => ({\n      ...prev,\n      [dataset]: !prev[dataset]\n    }));\n  };\n  const chartData = {\n    labels: timestamps,\n    datasets: [{\n      label: 'Temperature (°C)',\n      data: visibleDatasets.temperature ? history.map(item => item.temperature) : [],\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgba(255, 99, 132, 0.5)',\n      tension: 0.1,\n      borderWidth: 2,\n      pointRadius: 3,\n      hidden: !visibleDatasets.temperature\n    }, {\n      label: 'Humidity (%)',\n      data: visibleDatasets.humidity ? history.map(item => item.humidity) : [],\n      borderColor: 'rgb(54, 162, 235)',\n      backgroundColor: 'rgba(54, 162, 235, 0.5)',\n      tension: 0.1,\n      borderWidth: 2,\n      pointRadius: 3,\n      hidden: !visibleDatasets.humidity\n    }, {\n      label: 'Light Level',\n      data: visibleDatasets.light ? history.map(item => item.light) : [],\n      borderColor: 'rgb(255, 206, 86)',\n      backgroundColor: 'rgba(255, 206, 86, 0.5)',\n      tension: 0.1,\n      borderWidth: 2,\n      pointRadius: 3,\n      hidden: !visibleDatasets.light\n    }]\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top',\n        labels: {\n          font: {\n            size: 12\n          }\n        }\n      },\n      title: {\n        display: true,\n        text: 'График текущих показателей',\n        font: {\n          size: 16\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: false\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sensor-chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-controls\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => toggleDataset('temperature'),\n        label: `${visibleDatasets.temperature ? 'Скрыть' : 'Показать'} температуру`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => toggleDataset('humidity'),\n        label: `${visibleDatasets.humidity ? 'Скрыть' : 'Показать'} влажность`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => toggleDataset('light'),\n        label: `${visibleDatasets.light ? 'Скрыть' : 'Показать'} освещенность`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sensor-chart\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        options: options,\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(SensorChart, \"fJ8GlvfEKI6uSNAeJGf3pgavVlE=\");\n_c = SensorChart;\nexport default SensorChart;\nvar _c;\n$RefreshReg$(_c, \"SensorChart\");","map":{"version":3,"names":["React","useState","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Button","jsxDEV","_jsxDEV","register","SensorChart","timestamps","history","_s","visibleDatasets","setVisibleDatasets","temperature","humidity","light","toggleDataset","dataset","prev","chartData","labels","datasets","label","data","map","item","borderColor","backgroundColor","tension","borderWidth","pointRadius","hidden","options","responsive","maintainAspectRatio","plugins","legend","position","font","size","title","display","text","scales","y","beginAtZero","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/aquaponics/frontend/src/components/SensorChart/SensorChart.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport './SensorChart.css';\r\nimport Button from '../Button/Button';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst SensorChart = ({ timestamps, history }) => {\r\n  const [visibleDatasets, setVisibleDatasets] = useState({\r\n    temperature: true,\r\n    humidity: true,\r\n    light: true\r\n  });\r\n\r\n  const toggleDataset = (dataset) => {\r\n    setVisibleDatasets(prev => ({\r\n      ...prev,\r\n      [dataset]: !prev[dataset]\r\n    }));\r\n  };\r\n\r\n  const chartData = {\r\n    labels: timestamps,\r\n    datasets: [\r\n      {\r\n        label: 'Temperature (°C)',\r\n        data: visibleDatasets.temperature ? history.map(item => item.temperature) : [],\r\n        borderColor: 'rgb(255, 99, 132)',\r\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n        tension: 0.1,\r\n        borderWidth: 2,\r\n        pointRadius: 3,\r\n        hidden: !visibleDatasets.temperature\r\n      },\r\n      {\r\n        label: 'Humidity (%)',\r\n        data: visibleDatasets.humidity ? history.map(item => item.humidity) : [],\r\n        borderColor: 'rgb(54, 162, 235)',\r\n        backgroundColor: 'rgba(54, 162, 235, 0.5)',\r\n        tension: 0.1,\r\n        borderWidth: 2,\r\n        pointRadius: 3,\r\n        hidden: !visibleDatasets.humidity\r\n      },\r\n      {\r\n        label: 'Light Level',\r\n        data: visibleDatasets.light ? history.map(item => item.light) : [],\r\n        borderColor: 'rgb(255, 206, 86)',\r\n        backgroundColor: 'rgba(255, 206, 86, 0.5)',\r\n        tension: 0.1,\r\n        borderWidth: 2,\r\n        pointRadius: 3,\r\n        hidden: !visibleDatasets.light\r\n      }\r\n    ]\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n        labels: {\r\n          font: {\r\n            size: 12\r\n          }\r\n        }\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'График текущих показателей',\r\n        font: {\r\n          size: 16\r\n        }\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: false\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sensor-chart-container\">\r\n      <div className=\"chart-controls\">\r\n        <Button \r\n          onClick={() => toggleDataset('temperature')}\r\n          label={`${visibleDatasets.temperature ? 'Скрыть' : 'Показать'} температуру`}\r\n        />\r\n        <Button \r\n          onClick={() => toggleDataset('humidity')}\r\n          label={`${visibleDatasets.humidity ? 'Скрыть' : 'Показать'} влажность`}\r\n        />\r\n        <Button \r\n          onClick={() => toggleDataset('light')}\r\n          label={`${visibleDatasets.light ? 'Скрыть' : 'Показать'} освещенность`}\r\n        />\r\n      </div>\r\n      \r\n      <div className=\"sensor-chart\">\r\n        <Line options={options} data={chartData} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SensorChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}