{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ilya\\\\Desktop\\\\labi\\\\2 \\u043A\\u0443\\u0440\\u0441\\\\\\u0413\\u041F\\u041E\\\\frontik\\\\aquaponics-frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [data, setData] = useState({\n    temperature: 0,\n    humidity: 0,\n    light: 0\n  });\n  const [deviceId, setDeviceId] = useState(''); // Это нужно будет получить из авторизации\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [historyData, setHistoryData] = useState({\n    temperature: [],\n    humidity: [],\n    light: []\n  });\n\n  // Получение данных с API\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [tempRes, humRes, lightRes] = await Promise.all([axios.get(`http://localhost:3000/data/temperature?device_id=${deviceId}`), axios.get(`http://localhost:3000/data/humidity?device_id=${deviceId}`), axios.get(`http://localhost:3000/data/light?device_id=${deviceId}`)]);\n        setData({\n          temperature: tempRes.data[0].value,\n          humidity: humRes.data[0].value,\n          light: lightRes.data[0].value\n        });\n      } catch (err) {\n        console.error('Error fetching data:', err);\n      }\n    };\n\n    // Запрос на получение текущего device_id пользователя\n    // Это зависит от вашего способа авторизации (например, токен в заголовках)\n    const userDeviceId = localStorage.getItem('device_id'); // или получите device_id через контекст\n    setDeviceId(userDeviceId);\n    fetchData();\n    const interval = setInterval(fetchData, 10000); // Обновление каждые 10 секунд\n    return () => clearInterval(interval);\n  }, [deviceId]);\n\n  // Запрос на получение истории данных по времени\n  const fetchHistoryData = async () => {\n    try {\n      const [tempRes, humRes, lightRes] = await Promise.all([axios.get(`http://localhost:3000/data/temperature?device_id=${deviceId}&start=${startDate}&end=${endDate}`), axios.get(`http://localhost:3000/data/humidity?device_id=${deviceId}&start=${startDate}&end=${endDate}`), axios.get(`http://localhost:3000/data/light?device_id=${deviceId}&start=${startDate}&end=${endDate}`)]);\n      setHistoryData({\n        temperature: tempRes.data,\n        humidity: humRes.data,\n        light: lightRes.data\n      });\n    } catch (err) {\n      console.error('Error fetching history data:', err);\n    }\n  };\n  useEffect(() => {\n    if (startDate && endDate) {\n      fetchHistoryData();\n    }\n  }, [startDate, endDate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl text-black text-center mb-6\",\n      children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u0435\\u043B\\u0438 \\u0432\\u0430\\u0448\\u0435\\u0433\\u043E \\u0443\\u0441\\u0442\\u0440\\u043E\\u0439\\u0441\\u0442\\u0432\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3 gap-6 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dark-green p-4 rounded-lg text-white text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0422\\u0435\\u043C\\u043F\\u0435\\u0440\\u0430\\u0442\\u0443\\u0440\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [data.temperature, \" \\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dark-green p-4 rounded-lg text-white text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0421\\u0432\\u0435\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [data.light, \" lux\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dark-green p-4 rounded-lg text-white text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0412\\u043B\\u0430\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [data.humidity, \" %\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-xl\",\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u0440\\u043E\\u043C\\u0435\\u0436\\u0443\\u0442\\u043E\\u043A \\u0432\\u0440\\u0435\\u043C\\u0435\\u043D\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        value: startDate,\n        onChange: e => setStartDate(e.target.value),\n        className: \"p-2 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mx-4\",\n        children: \"\\u043F\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        value: endDate,\n        onChange: e => setEndDate(e.target.value),\n        className: \"p-2 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl\",\n        children: \"\\u0418\\u0441\\u0442\\u043E\\u0440\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"+SPpOBRP/P/KPptoAaD1Xj1vH+U=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","Dashboard","_s","data","setData","temperature","humidity","light","deviceId","setDeviceId","startDate","setStartDate","endDate","setEndDate","historyData","setHistoryData","fetchData","tempRes","humRes","lightRes","Promise","all","get","value","err","console","error","userDeviceId","localStorage","getItem","interval","setInterval","clearInterval","fetchHistoryData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/Ilya/Desktop/labi/2 курс/ГПО/frontik/aquaponics-frontend/src/components/Dashboard.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Dashboard() {\r\n  const [data, setData] = useState({ temperature: 0, humidity: 0, light: 0 });\r\n  const [deviceId, setDeviceId] = useState(''); // Это нужно будет получить из авторизации\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const [historyData, setHistoryData] = useState({ temperature: [], humidity: [], light: [] });\r\n\r\n  // Получение данных с API\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const [tempRes, humRes, lightRes] = await Promise.all([\r\n          axios.get(`http://localhost:3000/data/temperature?device_id=${deviceId}`),\r\n          axios.get(`http://localhost:3000/data/humidity?device_id=${deviceId}`),\r\n          axios.get(`http://localhost:3000/data/light?device_id=${deviceId}`),\r\n        ]);\r\n        setData({\r\n          temperature: tempRes.data[0].value,\r\n          humidity: humRes.data[0].value,\r\n          light: lightRes.data[0].value,\r\n        });\r\n      } catch (err) {\r\n        console.error('Error fetching data:', err);\r\n      }\r\n    };\r\n\r\n    // Запрос на получение текущего device_id пользователя\r\n    // Это зависит от вашего способа авторизации (например, токен в заголовках)\r\n    const userDeviceId = localStorage.getItem('device_id'); // или получите device_id через контекст\r\n    setDeviceId(userDeviceId);\r\n\r\n    fetchData();\r\n    const interval = setInterval(fetchData, 10000); // Обновление каждые 10 секунд\r\n    return () => clearInterval(interval);\r\n  }, [deviceId]);\r\n\r\n  // Запрос на получение истории данных по времени\r\n  const fetchHistoryData = async () => {\r\n    try {\r\n      const [tempRes, humRes, lightRes] = await Promise.all([\r\n        axios.get(`http://localhost:3000/data/temperature?device_id=${deviceId}&start=${startDate}&end=${endDate}`),\r\n        axios.get(`http://localhost:3000/data/humidity?device_id=${deviceId}&start=${startDate}&end=${endDate}`),\r\n        axios.get(`http://localhost:3000/data/light?device_id=${deviceId}&start=${startDate}&end=${endDate}`),\r\n      ]);\r\n      setHistoryData({\r\n        temperature: tempRes.data,\r\n        humidity: humRes.data,\r\n        light: lightRes.data,\r\n      });\r\n    } catch (err) {\r\n      console.error('Error fetching history data:', err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (startDate && endDate) {\r\n      fetchHistoryData();\r\n    }\r\n  }, [startDate, endDate]);\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h1 className=\"text-4xl text-black text-center mb-6\">Показатели вашего устройства</h1>\r\n      \r\n      <div className=\"grid grid-cols-3 gap-6 mb-6\">\r\n        <div className=\"dark-green p-4 rounded-lg text-white text-center\">\r\n          <p>Температура</p>\r\n          <p>{data.temperature} °C</p>\r\n        </div>\r\n        <div className=\"dark-green p-4 rounded-lg text-white text-center\">\r\n          <p>Свет</p>\r\n          <p>{data.light} lux</p>\r\n        </div>\r\n        <div className=\"dark-green p-4 rounded-lg text-white text-center\">\r\n          <p>Влажность</p>\r\n          <p>{data.humidity} %</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Выбор промежутка времени */}\r\n      <div className=\"mb-6\">\r\n        <label className=\"block text-xl\">Выберите промежуток времени:</label>\r\n        <input\r\n          type=\"datetime-local\"\r\n          value={startDate}\r\n          onChange={(e) => setStartDate(e.target.value)}\r\n          className=\"p-2 rounded\"\r\n        />\r\n        <span className=\"mx-4\">по</span>\r\n        <input\r\n          type=\"datetime-local\"\r\n          value={endDate}\r\n          onChange={(e) => setEndDate(e.target.value)}\r\n          className=\"p-2 rounded\"\r\n        />\r\n      </div>\r\n\r\n      {/* График */}\r\n      <div>\r\n        {/* Здесь должен быть компонент графика, например, с использованием библиотеки Chart.js */}\r\n        <h2 className=\"text-2xl\">Исторические данные</h2>\r\n        {/* График с историческими данными */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}